1. ⭐ React Hooks에 대해 설명해주세요.
=> 함수형 컴포넌트에서 컴포넌트 안에서 상태 관리, 라이프 사이클을 제어할 수 있게 해주는 기능입니다.
=> useState, useEffect, useContext, useReducer, useCallback, useMemo, useRef...


2. useEffect와 useLayoutEffect의 차이점에 대해 설명해주세요
=> useEffect은 DOM을 업데이트하고 브라우저가 그려진 이후 실행됩니다.
=> useLayoutEffect는 DOM이 업데이트되고 브라우저가 그려지기 전에 실행됩니다.


3. shouldComponentUpdate에 대해 설명해주세요.
=> 클래스형 컴포넌트에서 성능 최적화를 위해 사용됩니다.
=> 컴포넌트가 리렌더링될 떄 조건부로 리렌더링 여부를 결정할 수 있습니다.


4. React에서 State를 어떻게 관리하나요?
=> 컴포넌트에서 useState 훅을 사용해서 상태를 관리합니다.
=> setState를 호출하여 상태를 변경하고 컴포넌트를 리렌더링합니다.


5. Props에 대해 설명해주세요.
=> props는 부모 컴포넌트에서 자식 컴포넌트에게 전달하는 단방향 읽기 전용 데이터입니다.


6. ⭐ Props Drilling에 대해 설명해주세요.
=> 데이터를 전달할 떄 여러 컴포넌트를 거쳐서 전달하는 현상입니다.


7. ⭐ Props Drilling을 어떻게 해결할 수 있나요?
=> Context-API를 사용해서 전역적으로 관리할 수 있습니다.
=> 또는 Redux를 사용할 수 있습니다.


8. 데이터를 자식에서 부모로도 전달할 수 있나요?
=> 부모 컴포넌트에서 함수를 생성하여 전달 받을 수 있습니다.
=> 부모 컴포넌트에서 함수를 생성 => 해당 함수를 props로 전달 => 자식 컴포넌트에서 호출하여 데이터를 가져옵니다.


9. Props와 State의 차이에 대해 설명해주세요.
=> props는 부모가 자식에게 전달하는 읽기 전용 데이터입니다.
=> state는 컴포넌트 내부에서 관리되는 동적인 데이터입니다.


10. 왜 state를 직접 바꾸지 않고 setState (useState)를 사용해야 하나요?
=> state를 직접 변경하는 것은 리액트 상태 관리 시스템을 우회합니다.
=> setState을 통해 변경하면 자동으로 리렌더링을 트리거합니다.
=> 배치처리를 받을 수 있습니다.
=> 비동기적으로 처리할 수 있습니다.

(동기 코드 + setState 두개 => 함수 호출 => 동기 코드 실행 => setState는 업데이트 큐에 들어감 => 리렌더링 전에
업데이트 큐에서 모아진 setState 처리(배치 처리) => 변경된 state를 통해 업데이트)


