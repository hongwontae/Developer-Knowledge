1. HOC (Higher-Order Components)에 대해 설명해주세요.
=> 컴포넌트를 인자로 받아서 새로운 컴포넌트를 반환하는 함수입니다.
=> 재사용 가능한 로직을 추상화하고 여러 컴포넌트에서 사용할 수 있습니다.


2. Context API에 대해 설명해주세요.
=> 컴포넌트 트리 전체에 데이터를 전역적으로 전달할 수 있게 해주는 기능입니다.
=> createContext, useContext..


3. React.Fragment에 대해 설명해주세요.
=> 여러 엘리먼트를 하나의 부모 엘리먼트로 감싸서 반환할 수 있도록 해주는 컴포넌트입니다.
=> 불필요하게 DOM 요소를 추가하지 않고 그룹화할 수 있습니다.


4. Portal에 대해 설명해주세요.
=> 컴포넌트를 DOM 트리의 다른 곳에 렌더링할 수 있게 해주는 기능입니다.
=> createPortal를 사용해서 구현할 수 있습니다.


5. 에러 바운더리에 대해 설명해주세요.
=> React에서 자식 컴포넌트에서 발생하는 자바스크립트 에러를 잡아서 처리할 수 있는 컴포넌트입니다.
=> 에러가 발생해도 전체 앱이 깨지지 않도록 보호해주는 역할을 합니다.


6. ⭐ 리액트에서 메모이제이션을 어떤 방식으로 활용할 수 있나요?
=> useMemo와 useCallback 훅을 통해 메모이제이션을 활용할 수 있습니다.
=> useMemo는 계산된 값을 메모리에 저장하여, 의존성 배열이 변경되지 않으면 다시 계산하지 않습니다.
=> useCallback 함수가 재생성되는 것을 방지합니다.


7. React.memo와 useMemo의 차이에 대해 설명해주세요.
=> React.memo는 받아온 props가 변경되지 않으면 리렌더링을 방지합니다.
=> useMemo는 계산된 값을 메모리에 저장하여, 의존성 배열이 변경되지 않으면 다시 계산하지 않습니다.