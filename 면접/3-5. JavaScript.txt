1. 함수 선언문과 함수 표현식의 차이에 대해 설명해주세요.
=> 함수 선언문은 function 키워드로 함수를 정의하고 함수 표현식은 변수에 함수를 할당합니다.
=> 가장 큰 차이점은 함수 선언문은 호이스팅되어 선언전에 접근하여 호출할 수 있습니다.


2. 자바스크립트에서 일어나는 데이터 형변환에 대해 설명해주세요.
=> 명시적 형변환과 자동 형변환이 존재합니다.
=> 자동 형변환은 JS가 자동으로 데이터 타입을 변경하는 경우를 의미합니다. 특히 연산자를 사용할 떄 발생합니다.
=> 명시적 형변환은 내장 함수인 String(), Number(), Boolean()를 호출하여 사용합니다.


3. 자바스크립트가 동적 언어인 이유는 무엇인가요?
=> 변수 선언 시 타입을 지정하지 않는 동적 파이핑 언어이고 변수의 타입이 런타임에 결정되기 때문입니다.


4. undefined, null, undeclared를 비교해주세요.
4-1. undefined
=> 값이 할당되지 않은 변수를 나타냅니다.
=> JS에서 변수는 선언했지만 값을 할당하지 않은 경우 undefined가 자동으로 할당됩니다.

4-2. null
=> 없음, 비어있음을 명시적으로 나타낸 값입니다.

4-3. undeclared 
=> 선언되지 않은 변수를 의미합니다.
=> 선언되지 않은 변수는 undeclared 상태이고 이를 참조하려고 하면 ReferenceError가 발생합니다.


5. 엄격 모드에 대해 설명해주세요.
=> JS에서 안전하고 오류를 방지하는 코드 실행 모드입니다.
=> 'use strict' 키워드를 사용합니다. 스크립트 전체에 적용하려면 최상단에, 함수에 적용하려면 내부에 사용합니다.

5-1. 특징
1. 선언되지 않은 변수를 사용할 수 없습니다.
2. this가 전역 객체를 참조하지 않고 undefined로 처리됩니다.
3. 함수의 매개변수가 중복될 수 없습니다.
4. eval() 사용이 불가능해집니다.


6. Rest 연산자와 Spread 연산자에 대해 설명해주세요.
=> Rest 연산자와 Spread 연산자는 dot 세 개를 이어붙여서 사용합니다.
=> Rest 연산자는 함수의 매개변수에 사용되어 다수의 인수를 하나의 배열로 만들어줍니다.
=> 또한 배열, 객체 비구조화 할당에 사용되어 남은 요소들을 배열이나 객체로 모을 수 있습니다.
=> Spread 연산자는 배열이나 객체를 펼쳐서 전개하는데 사용됩니다.

