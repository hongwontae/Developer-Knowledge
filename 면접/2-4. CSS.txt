1. position에 대해서 설명해주세요
=> 요소의 위치를 정의하는데 사용됩니다.

1-1. static(default)
=> 요소가 문서의 흐름에 따라 배치됩니다.

1-2. relative
=> 요소가 자기 자신의 원래 위치를 기준으로 이동합니다.
=> top, left, right, bottom을 사용 가능.

1-3. absolute
=> 가장 가까운 position이 지정된 부모 요소를 기준으로 위치가 설정됩니다.
=> 부모 요소가 없으면 문서의 루트를 기준으로 합니다.

1-4. fixed
=> 뷰포트를 기준으로 고정됩니다. 스크롤해도 위치가 변하지 않습니다.
=> 예: 고정된 헤더나 푸터에 사용.

1-5. sticky
=> 스크롤 위치에 따라 동적으로 relative와 fixed 사이에서 동작합니다.
=> 예: top: 0;을 사용하면 스크롤 시 해당 요소가 뷰포트 상단에 고정.


2. float에 대해서 설명해주세요
=> *HTML 요소를 문서의 일반적인 흐름(normal flow)**에서 분리하여 왼쪽 또는 오른쪽으로 정렬할 때 사용됩니다.



3. transform이란?
=> 요소를 변형(이동, 회전, 크기 변경 등)시키는 CSS 속성입니다.
=> 변형은 요소의 기준점(transform-origin)을 기준으로 동작합니다.
(center가 default입니다. transform-origin : left top => 왼쪽 상단을 기준으로 변형형)

3-1. value
1. translateX, Y() : 요소를 x,y 축 방향으로 이동시킵니다.
2. rotate: 요소를 회전시킵니다.
3. scale: 요소의 크기를 확대하거나 축소시킵니다.
4. skew: 요소를 기울입니다.
5. matrix: 변형을 직접 정의 (복합적인 변형).

4. transition이란?
=> CSS 속성이 시간에 따라 부드럽게 변화하도록 설정합니다.
=> 트랜지션은 기본적으로 CSS 속성 값이 바껴야 동작합니다.
=> 즉, .box :hover : {background-color : red}로 변경될 떄 기존의 trnasition 적용

4-1. transition: [속성] [지속 시간] [타이밍 함수] [지연 시간];
=> 속성 : 애니메이션 효과를 적용할 CSS 속성(transform, all, background-color)
=> 지속 시간 : 초 단위
=> 타이밍 함수 : 속도 곡선 (ease, linear, ease-in-out)
=> 지연 시간 : 애니메이션 시작 전 대기 시간


5. keyframes
=> CSS 애니메이션의 동작을 단계별로 정의하는 규칙입니다.

5-1. @keyframes aniName {
    n% {
        ...
    }
    n% {

    }
    n% {

    }
    ...
} => n%는 애니메이션 시간 정의, n% 안은 css 정의


5-2. animation-name
=> @keyframes에서 정의한 이름을 지정해야 애니메이션이 실행됩니다.

5-3. animation-duration
=> 애니메이션이 완료되는 데 걸리는 시간을 설정합니다.
=> s초, ms 밀리초

5-4. animation-timing-function
=> 애니메이션이 실행되는 속도 곡선을 설정합니다.
=> ease(default)(느리게 시작, 빠르게 진행한 뒤 다시 느려짐)
=> ease-in: 느리게 시작.
=> ease-out: 느리게 끝남.
=> linear: 일정한 속도로 진행.
...

5-5. animation-delay
=> 애니메이션 시작 전에 대기하는 시간을 설정합니다.
=> 단위: s, ms.

5-6. animation-iteration-count
=> 애니메이션 반복 횟수를 지정합니다.
=> defalut 1 or n or infinite(무한)

5-7. animation-direction
=> 애니메이션이 재생되는 방향을 지정합니다.
=> normal(정방향), reverse(역방향 재생), alternate(정방향 → 역방향 반복)


5-8. animation 단축 속성
=> animation: [name] [duration] [timing-function] [delay] [iteration-count] [direction];



