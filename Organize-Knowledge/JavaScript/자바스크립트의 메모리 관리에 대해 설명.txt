1. JS 메모리 관리
=> JS의 메모리 관리는 메모리 할당과 메모리 해제로 나눌 수 있습니다.

2. 메모리 할당
=> 변수와 객체 : 변수 선언, 객체 생성, 배열 할당 등으로 메모리가 할당됩니다.
=> 스택과 힙 : 기본 데이터 타입은 스택에 저장되고, 객체와 배열은 힙에 저장됩니다.


3. 메모리 해제
=> 가비지 컬렉터를 통해 사용되지 않는 메모리를 해제합니다.
=> 주요 알고리즘으로 참조 카운트와 마크 앤 스윕을 사용합니다.

3-1. 참조 카운트 : 객체가 참조되는 횟수를 세어 참조가 0이라면 메모리를 회수합니다.
3-2. 마크 앤 스윕 : 루트 객체에서 접근 가능한 모든 객체를 마킹합니다. 마킹되지 않은 객체를 메모리에서 해제합니다.

4. 메모리 누수와 예방
=> 순환 참조, 전역 변수 과도한 사용, 이벤트 리스너 미제거 등 경우에는 가비지 컬렉터가 실행되지 않아 메모리 누수가
발생합니다.


5. 마크 앤 스윕
5-1. 마킹 단계
=> 전역 객체와 현재 실행 중인 함수의 로컬 변수 등, 모든 활성 객체 추적
=> 루트 객체에서 참조하는 객체를 탐색합니다. 탐색된 객체도 마킹됩니다.
=> 탐색된 객체는 마킹 상태로 표시됩니다. 해당 객체가 여전히 사용중임을 나타냅니다.

5-2. 스윕 단계
=> 미사용 객체 탐색 : 메모리에서 할당된 모든 객체를 순회하면서 마킹되지 않은 객체를 찾습니다.
=> 메모리 해제: 마킹되지 않은 객체는 더 이상 사용되지 않는 것으로 간주되어 메모리에서 제거됩니다.
