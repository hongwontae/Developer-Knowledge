1. 스코프란?
=> 스코프는 변수가 유효하고 참조될 수 있는 범위를 결정합니다.


2. 스코프의 유형
=> 스코프 유형은 4가지로 나눌 수 있습니다.
2-1. 전역 스코프 : 코드의 최상위에서 정의된 변수와 함수는 전역 스코프에 속합니다. 전역 스코프 변수는 코드 어디에서나 접근할
수 있습니다.
2-2. 지역 스코프 : 함수 내에서 정의된 변수와 함수는 해당 함수의 지역 스코프에 속합니다. 
지역 스코프의 변수는 함수 외부에서 접근할 수 없습니다.
2-3. 블록 스코프 : let, const로 선언한 변수는 블록 스코프를 가집니다. 블록 내에서만 유효합니다.

2-4. 함수 레벨 스코프 : var로 선언된 변수는 선언된 함수의 전체 범위에서 유효합니다.


3. 스코프 체인
=> 변수를 찾는 JS의 매커니즘을 의미합니다.

3-1. 동작 방식
1. 함수나 블록 내부에서 변수를 참조할 떄 JS는 현재 스코프에서 변수를 찾습니다.
2. 변수가 없으면 외부 스코프에서 찾습니다.
3. 이 과정을 반복하여 전역 스코프까지 올라갑니다
4. 변수를 찾지 못하면 ReferenceError가 발생합니다.

3-2. 특징
1. 스코프 체인은 호출될 떄가 아니라 정의된 위치에 따라 결정됩니다. => 클로저와 관련있습니다.
2. 렉시컬 스코프라고 불리며, 함수가 어디서 정의되었는지에 따라 스코프가 정해진다는 의미입니다.



면접질문-1
JS의 스코프에 대해서 설명해보세요
*** Scope는 변수가 유효한 범위를 의미합니다. 크게 4가지로 나눌 수 있습니다.
*** 첫 번쨰로, 전역 스코프입니다. 전역에서 선언한 변수는 모든 코드 위치에서 접근할 수 있습니다. => var, let, const 동일
*** 두 번쨰로, 지역 스코프입니다. 함수 내에서 선언된 변수는 함수 외부에서 접근할 수 없습니다. => var, let, const 동일
*** 세 번쨰로, 블록 스코프입니다. 블록 내부에서 let, const로 선언된 변수는 블록 내에서만 유효합니다. => let, const
*** 마지막으로 함수 레벨 스코프입니다. 함수 내부에서 선언된 var는 내부 블록에서도 유효합니다.


면접 질문-2
스코프 체인에 대해서 설명하세요
=> JS에서 변수를 사용할 떄 현재 스코프에서 변수를 찾지 못하면 외부 스코프로 이동하여 변수를 찾습니다.
=> 이 과정은 전역 스코프에 도달할 떄까지 지속됩니다. 이를 스코프 체인이라고 합니다.
=> 만약 전역 스코프에서도 없다면 Reference Error가 발생합니다.

*** 현재 렉시컬 환경에서 변수나 함수를 찾고, 참조할 수 없다면 외부 렉시컬 환경에 접근해서 변수와 함수를 찾습니다.
=> 이렇게 전역 렉시컬 환경까지 올라가고 없으면 Reference Error가 발생합니다.


