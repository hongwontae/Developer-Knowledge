1. 얕은 복사
=> 얕은 복사는 객체의 최상위 레벨의 속성만 복사합니다.
=> 중첩된 객체나 배열의 참조는 복사하지 않고 원본과 동일한 참조를 유지합니다.
=> Object.assign(), spread 연산자


2. 깊은 복사
=> 깊은 복사는 객체와 모든 중첩된 객체를 재귀적으로 복사합니다.
=> 복사된 객체와 원본 객체는 완전히 독립적입니다.
=> JSON.parse(JSON.stringify()), lodash의 _cleanDeep()


면접 질문
얕은 복사와 깊은 복사에 대해서 설명하세요
=> 얕은 복사는 객체의 최상위 레벨의 속성만 복사합니다. 즉, 중첩된 객체의 속성은 원본과 같은 참조값을 유지합니다.
=> 이는 복사된 객체에서 중첩된 객체의 값을 변경하면 원본 객체의 값도 영향을 받는다는 이야기입니다.
=> Object.assign()이나 spread 연산자를 통해 얕은 복사를 할 수 있습니다.

=> 깊은 복사는 객체와 모든 중첩된 객체를 재귀적으로 복사합니다. 즉, 원본 객체와 복사된 객체는 완전히 독립적입니다.
=> JSON.parse(JSON.stringify()), lodash .cleanDeep()을 통해 깊은 복사를 할 수 있습니다.




