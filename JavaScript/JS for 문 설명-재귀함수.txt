1. for
=> 반복 작업에 일반적으로 사용하는 구문입니다.


2. 기본 for문
=> 초기화, 조건식, 증감식부분으로 구성됩니다.
=> 각 부문은 세미콜론으로 구분할 수 있습니다.
for(let i=0; i<5; i++){
    consol.log(i)
}


3. for in 
=> 객체의 속성을 반복할 떄 사용합니다.
=> 객체의 키를 순회하여 작업을 수행할 수 있습니다.
=> for in은 상속된 객체의 속성까지 포함합니다.
for(const key in objec  t){
    console.log(object[key])
}


3. for of
=> 배열문이나 이터러블 객체의 값을 반복할 떄 사용합니다.
=> arr, String, set, map 등에 사용됩니다.
for(const ele of arr){
    console.log(ele);
}


4. 재귀함수
=> 자기 자신을 호출하는 함수를 말합니다.


4-1. 재귀 함수 구성 요소
1. 기본 사례 : 재귀 호출을 종료하는 조건입니다. 함수가 자기 자신을 호출하지 않고 결과를 반환하는 조건입니다.

2. 재귀 사례 : 자기 자신을 호출하는 부분입니다.


4-2. 재귀 함수 호출 과정
1. 기본 사례와 재귀 사례가 존재하는 재귀 함수를 정의합니다
2. 재귀함수를 호출합니다.
3. 기본 사례에서 값이 반환되기 전에 지속적으로 호출합니다. => 콜 스택에서 함수가 쌓입니다.
4. 기본 사례에서 값이 반환되면 함수 내부에서 return 키워드로 값이 반환되면서 함수가 종료되고 콜 스택에서 pop됩니다.
5. 이 연쇄작용을 통해 가장 먼저 호출된 재귀함수에서 값을 얻어올 수 있습니다.

