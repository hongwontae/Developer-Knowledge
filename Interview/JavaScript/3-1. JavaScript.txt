1. 자바스크립트는 무슨 언어인가요?
=> 인터프리터 방식의 동적 프로그래밍 언어로, 웹 브라우저에서 실행되는 대표적인 클라이언트 사이드 언어입니다.
=> Node.js를 통해 서버 사이드에서도 활용됩니다.

** 인터프리터는 무엇인가요?
=> 코드를 한 줄씩 실행하는 방식의 언어 처리기입니다.
=> 코드를 작성하면 즉시 실행됩니다.
=> 최신 자바스크립트 엔진(V8 등)은 JIT(Just-In-Time) 컴파일러를 사용해 속도를 개선합니다.


2. 변수 선언, 초기화, 할당의 차이점은?
2-1. 선언은 변수를 생성합니다.
2-2. 초기화는 선언과 동시에 기본값을 설정합니다.
2-3. 할당은 변수에 값을 저장 또는 변경합니다.


3. JS의 데이터 타입은 원시 타입과 참조 타입으로 나뉩니다.
3-1. 원시 타입은 string, number, bigint, boolean, null, undefined, symbol
3-2. 참조 타입은 Object, Array, function


4. var, let, const에 차이를 설명해주세요
=> var, let, const는 JS의 변수 선언 키워드라고 부릅니다.
=> var는 함수 스코프라서 함수 스코프가 적용되고 블록을 무시합니다.
=> let, const는 블록을 기준으로 scope가 결정됩니다. 즉, if문에서 정의된 var는 어디서든지 접근할 수 있습니다.
=> let은 재할당 가능, const는 재할당 불가능합니다. 

** TDZ에 대해 설명해주세요
=> 변수는 선언되었지만 초기화되기 전까지 접근할 수 없는 구간을 의미합니다.
=> let, const가 초기화 전에 접근하면 TDZ 구간에 있기 떄문에 Reference Error가 발생합니다.
=> var는 undefined가 반환됩니다.



5. 생성자
=> new 키워드를 사용해서 호출하면 새로운 객체를 생성하는 함수입니다.
=> class는 constructor로 초기화, 함수로 생성하면 this를 통해 속성을 초기화합니다.
=> new가 없이 호출하면 this는 window or undefined를 가르킵니다.


6. ⭐ this에 대해 설명해주세요.
=> 실행 컨텍스트에 따라 달라지는 객체 참조값입니다.
6-1. 전역일 떄 this는 window or global
6-2. 일반 함수 호출 시 undefined
6-3. 메서드 호출 시 해당 객체
6-4. 생성자 함수에서 호출 시 생성하는 인스턴스
6-5. 화살표 함수는 상위 scope의 this


7.call, apply, bind에 대해 설명해주세요.
=> this를 명시적으로 바인딩할 떄 사용하는 메서드입니다.

7-1. call
=> 즉시 실행하며, 첫 번쨰 인자에 this를 지정하고 개별 인자를 전달합니다.

7-2. apply
=> 즉시 실행하며, 첫 번쨰 인자에 this를 지정하고 배열로 인자를 전달합니다.

7-3. bind
=> 즉시 실행하지 않고, 첫 번쨰 인자에 this 지정하고 개별 인자를 전달합니다.